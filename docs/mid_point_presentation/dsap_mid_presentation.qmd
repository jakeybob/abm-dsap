---
title: "An Agent Based Infectious Disease Model"
subtitle: "Data Science Accelerator Programme (mid-point update)"
title-slide-attributes:
    data-background-image: "presentation_files/phs_title_slide_background_1200x900.png"
    data-background-size: contain
    data-background-opacity: "1"
width: 1200
height: 900
author:
  name: Bob Taylor
date: 10/27/2022
date-format: long
format: 
  revealjs:
    css: presentation_files/presentation.css
    chalkboard: true
---

## {background-color="#7030A0"}

<p>&nbsp;</p>
[Recap]{style="color: white; font-weight: bold; font-size: 80px"}
<p>&nbsp;</p>
[Progress]{style="color: white; font-weight: bold; font-size: 80px"}
<p>&nbsp;</p>
[Changes]{style="color: white; font-weight: bold; font-size: 80px"}
<p>&nbsp;</p>
[Next Steps...]{style="color: white; font-weight: bold; font-size: 80px"}

::: {.notes}
**Introduction:** background on what agent based modelling is; PROS and CONS

**Outputs:** what the end products / potential end products of the project are

**Benefits & Goals:** why bother? How does this project benefit PHS or the public?
:::


# Recap {background-image="presentation_files/phs_slide_background_1200x900.png" background-size="contain"}

::: {style="font-size: 1.25em"}

**<u>Traditional</u>** (e.g. SEIR models)

* large sets of differential equations solved numerically


* global outcomes based on system-wide behaviours

:::

<figure>
<img src="pics/seir.png" class="centerimg50">
  <figcaption style="font-size: medium"><a href="https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology">en.wikipedia.org/wiki/Compartmental_models_in_epidemiology</a></figcaption>
</figure>

::: {.notes}
TYPICALLY

**S**usceptible
**E**xposed
**I**nfected
**R**ecovered

... give smooth continuous estimates of global outcomes estimated from system wide behaviours

TOP DOWN methodology where you set population level parameters

:::


## {background-image="presentation_files/phs_slide_background_1200x900.png" background-size="contain"}

::: {style="font-size: 1.25em"}

**<u>Agent Based Models</u>**

* individual agents given *behaviours* and *attributes*


* allowed to *interact*, make decisions $\rightarrow$ evolve; e.g. become infected, admitted to hospital etc

:::

ABMs can effectively replicate SEIR models...

::: {layout-ncol=3}
![**10 agents**](pics/sir_10.png)

![**100 agents**](pics/sir_100.png)

![**1,000 agents**](pics/sir_1000.png)
:::

::: {.notes}
ABMs take a **BOTTOM UP** approach...

Individual agents; time stepped

Might say 5% of people have flu for continuous approach, or *these* 50 out of 1000 have flu

**PLOTS**

Agents given

$\Beta$ = probability of a contact causing an infection
c = poisson expectation of number of expected contacts in each time step

in this simple model we can see a continous-like behaviour emerge when using many agents

:::


## {background-image="presentation_files/phs_slide_background_1200x900.png" background-size="contain"}

::: {style="font-size: 1.25em"}

**<u>Project Proposal</u>**

* this

* something else

* and something else too

:::

This is some text at the bottom for some reason

::: {.notes}
Some notes for this section
:::


# Progress {background-image="presentation_files/phs_slide_background_1200x900.png" background-size="contain"}

::: {style="font-size: 1.25em"}
* investigated `Agents.jl` library
* produced working 0D / 2D agent based disease models

:::

::: {layout-ncol=2}
![](pics/abm_test_false.mp4)

![](pics/osm_test_glasgow.mp4)
:::

::: {.notes}
Some notes for this section
:::


## {background-image="presentation_files/phs_slide_background_1200x900.png" background-size="contain"}

::: {style="font-size: 1.25em"}
&nbsp;
:::

::: {layout-ncol=2}
![](pics/pic.png)

* mistakes may have occurred
* lessons learned
* now compiling example notebooks / MVP
* started looking at how to narrow down 2D model scope / API
:::

::: {.notes}
Some notes for this section
:::


# Changes {background-image="presentation_files/phs_slide_background_1200x900.png" background-size="contain"}

::: {style="font-size: 1.25em"}
 * initial focus more towards e.g. interactive outputs and 

 * that

 * next thing
:::

Why make these changes?

::: {.notes}
Some notes for this section
:::


# Next Steps {background-image="presentation_files/phs_slide_background_1200x900.png" background-size="contain"}

::: {style="font-size: 1.25em"}
* wrap up MVP (user interactive notebooks, deployed via e.g. [binder](https://mybinder.org/))

* further develop 2D model/s (explore grid/graph types)

* deploy as queryable service (AWS?)

* write up docs etc
:::

::: {.notes}
Some notes for this section
:::


# {background-color="#002060" transition="zoom"}

[Questions...?]{style="color: white; font-weight: bold; font-size: 120px"}

::: {.notes}

Why Julia?

R best option for 90% of people 90% of the time.

But for ABMs – 
R has no real library
NetLogo is single-purpose
Python does have Mesa library, but less fully featured

Julia is new, has good ABM library, lots of potential, very “tidy”, good package management etc

Something of a “middle ground” between R and Python

Is kind of what DSAP is for -- testing / trying new stuff.

:::